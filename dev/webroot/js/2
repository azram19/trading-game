margin = 20
size = 40
count = 12
height = Math.ceil 2*margin+(3*count+1)/2*size
width = 2*margin+Math.ceil(Math.sqrt(3)*size/2)*25

hitOptions =
    segments: true
    stroke: true
    fill: true
    tolerance: 5

view.viewSize = [width,height]

#onMouseDown = (event) ->
    #path = new Path()
    #path.strokeColor = '#00000'
    #path.selected = true

    #path.add event.point

#onMouseDrag = (event) ->
    #step = event.delta
    #step.angle += 90

    #top = event.middlePoint + step
    #bottom = event.middlePoint - step
    
    #line = new Path()
    #line.strokeColor = '#000000'
    #line.add top
    #line.add bottom

    #path.add top
    #path.insert 0, bottom

onMouseMove = (event) ->
    hitResult = project.hitTest event.point, hitOptions
    project.activeLayer.selected = false
    if hitResult and hitResult.item
        hitResult.item.selected = true

drawHex = (x, y, size) ->
    borderGradient = new Gradient ['yellow', 'black']
    decahedron = new Path.RegularPolygon new Point(x, y), 6, size
    decahedron.style =
        fillColor: '#000000'
        strokeColor: new GradientColor borderGradient, 0, 10
        strokeWidth: 10
        selected: false


horIncrement = Math.ceil Math.sqrt(3)*size
verIncrement = Math.ceil 3*size/2
offset = false

for y in [margin + size..height-margin-size] by verIncrement
    for x in [(margin + horIncrement/2 + (if offset then horIncrement/2 else 0))..width - margin - (if not offset then horIncrement/2 else 0)] by horIncrement
        drawHex x, y, size
    offset = not offset
